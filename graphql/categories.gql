# Categories 分类相关查询

query GetAllCategories($boutiqueId: GraphQLStringOrFloat!, $filter: categories_filter, $limit: Int, $offset: Int, $sort: [String]) {
  categories(
    filter: { 
      boutique_id: { id: { _eq: $boutiqueId } }
      _and: [$filter]
    }
    limit: $limit
    offset: $offset
    sort: $sort
  ) {
    id
    name
    description
    boutique {
      id
      name
      address
      city
      category
    }
    date_created
    date_updated
  }
}

query GetCategoryById($boutiqueId: GraphQLStringOrFloat!, $id: ID!) {
  categories_by_id(id: $id) {
    id
    name
    description
    boutique {
      id
      name
      address
      city
      code
      category
      contact
      expire_date
      stars
      main_image
      images
    }
    date_created
    date_updated
  }
}

# 获取分类下的产品
query GetProductsByCategory($userId: ID!, $boutiqueId: GraphQLStringOrFloat!, $categoryId: GraphQLStringOrFloat!, $filter: products_filter, $limit: Int, $offset: Int, $sort: [String]) {
  products(
    filter: { 
      user_created: { id: { _eq: $userId } }
      boutique_id: { id: { _eq: $boutiqueId } }
      category_id: { id: { _eq: $categoryId } }
      _and: [$filter]
    }
    limit: $limit
    offset: $offset
    sort: $sort
  ) {
    id
    name
    subtitle
    description
    price
    market_price
    stock
    main_image
    images
    video_url
    is_on_sale
    status
    total_sales_volume
    rating_avg
    total_reviews
    brand
    boutique {
      id
      name
      address
      city
      category
    }
    created_at
    updated_at
  }
}

# 聚合查询 - 获取分类统计信息
query GetCategoriesAggregated($userId: ID!, $boutiqueId: GraphQLStringOrFloat!, $filter: categories_filter, $groupBy: [String]) {
  categories_aggregated(
    filter: { 
      user_created: { id: { _eq: $userId } }
      boutique_id: { id: { _eq: $boutiqueId } }
      _and: [$filter]
    }
    groupBy: $groupBy
  ) {
    group
    countAll
  }
}
