# Boutiques 查询
query GetBoutiques($filter: boutiques_filter, $limit: Int, $offset: Int, $sort: [String]) {
  boutiques(
    filter: $filter
    limit: $limit
    offset: $offset
    sort: $sort
  ) {
    id
    name
    address
    city
    code
    category
    contact
    expire_date
    main_image
    images
    status
    stars
    sort
    date_created
    date_updated
  }
}

query GetBoutiqueDetail($id: ID!) {
  boutiques_by_id(id: $id) {
    id
    name
    address
    city
    code
    category
    contact
    expire_date
    main_image
    images
    status
    stars
    sort
    date_created
    date_updated
  }
}

query GetMyBoutique($userId: ID!) {
  boutiques(filter: { user_created: { id: { _eq: $userId } } }) {
    id
    name
    address
    city
    code
    category
    contact
    expire_date
    main_image
    images
    status
    stars
    sort
    date_created
    date_updated
  }
}

# 获取精品店的产品
query GetBoutiqueProducts($boutiqueId: GraphQLStringOrFloat!, $filter: products_filter, $limit: Int, $offset: Int, $sort: [String]) {
  products(
    filter: { 
      boutique_id: { id: { _eq: $boutiqueId } }
    }
    limit: $limit
    offset: $offset
    sort: $sort
  ) {
    id
    name
    subtitle
    description
    price
    market_price
    stock
    main_image
    images
    video_url
    is_on_sale
    status
    total_sales_volume
    rating_avg
    total_reviews
    brand
    category_id {
      id
      name
      description
    }
    created_at
    updated_at
  }
}

# 获取精品店的分类
query GetBoutiqueCategories($boutiqueId: GraphQLStringOrFloat!, $filter: categories_filter, $limit: Int, $offset: Int, $sort: [String]) {
  categories(
    filter: { 
      boutique_id: { id: { _eq: $boutiqueId } }
    }
    limit: $limit
    offset: $offset
    sort: $sort
  ) {
    id
    name
    description
    date_created
    date_updated
  }
}
